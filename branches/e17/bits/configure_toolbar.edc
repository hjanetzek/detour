
group { 
	name: "e/widgets/toolbar";

	parts {
		part { 
			name: "base";
			type: IMAGE;
			mouse_events: 0;

			description { 
				state: "default" 0.0;

				rel1 {
					offset: -1 -1;
				}

				rel2 {
					offset: -2 -1;
				}

				image {
					normal: "images/entry_im0.png";
					border: 6 6 8 7;
				}
			}
		}

		part { 
			name: "clipper";
			type: RECT;
			mouse_events: 0;

			description {
				state: "default" 0.0;

				rel1 {
					to: "base";
					offset: 5 5;
				}

				rel2 {
					to: "base";
					offset: -7 -7;
				}
			}
		}

		part { 
			name: "e.swallow.content";
			type: SWALLOW;
			clip_to: "clipper";

			description {
				state: "default" 0.0;
				rel1.to: "clipper";
				rel2.to: "clipper";
			}
		}

		part { 
			name: "left_arrow";
			type: IMAGE;
			mouse_events: 0;

			description { 
				state: "default" 0.0;
				min: 22 22;
				max: 22 22;
				fixed: 1 1;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				align: 0.0 0.5;

				image {
					normal: "images/gadman_im5.png";
				}
			}

			description { 
				state: "hidden" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 0;
				visible: 0;
			}
		}

		part { 
			name: "right_arrow";
			type: IMAGE;
			mouse_events: 0;

			description { 
				state: "default" 0.0;
				min: 22 22;
				max: 22 22;
				fixed: 1 1;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				align: 1.0 0.5;

				image {
					normal: "images/gadman_im6.png";
				}
			}

			description { 
				state: "hidden" 0.0;
				inherit: "default" 0.0;
				visible: 0;
				color: 255 255 255 0;
			}
		}

		part { 
			name: "event";
			type: RECT;
			mouse_events: 1;
			repeat_events: 1;

			description { 
				state: "default" 0.0;
				color: 0 0 0 0;
			}
		}
	}
	programs {

/* these signals are not in used, but should be
 */

/*
		# ifdef FOCUS
		#  undef FOCUS
		# endif
		#define FOCUS(NAME,SIGNAL,STATE) \
			program { \
				name: NAME; \
				signal: SIGNAL; \
				source: "e"; \
				action: STATE_SET STATE 0.0; \
				transition: DECELERATE 0.5; \
				target: "focus_clip"; \
			}
		FOCUS("focus_in", "e,state,focused", "focused")
		FOCUS("focus_out", "e,state,unfocused", "default")
*/

/*
		program { 
			name: "sb_hbar_show";
			signal: "e,action,show,hbar";
			source: "e";
			action:  STATE_SET "default" 0.0;
			transition: LINEAR 0.5;
			target: "left_arrow";
			target: "right_arrow";
		}

		program { 
			name: "sb_hbar_hide";
			signal: "e,action,hide,hbar";
			source: "e";
			action:  STATE_SET "hidden" 0.0;
			transition: LINEAR 0.5;
			target: "left_arrow";
			target: "right_arrow";
		}
*/    
	}
}

group { 
	name: "e/widgets/toolbar/item";

	parts {
		part { 
			name: "label2";
			type: TEXT;
			mouse_events: 0;
			scale: 1;

			description { 
				state: "default" 0.0;
				align: 0.5 1.0;
				fixed: 0 1;
				rel1.to: "e.text.label";
				rel2.to: "e.text.label";
				color: 60 60 60 255;

				text {
					font: "DejaVuSans";
					text_source: "e.text.label";
					size: 11;
					min: 1 1;
					align: 0.5 0.5;
					#if ENABLE_TEXT_CLASS == 0
						text_class: "";
					#else
					#if ENABLE_TEXT_CLASS == 1
						text_class: "fileman_icon";
					#endif
					#endif
				}
			}

			description { 
				state: "selected" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}

		part { 
			name: "bg";
			type: IMAGE;
			mouse_events: 0;

			description { 
				state: "default" 0.0;
				color: 255 255 255 0;
				align: 0.5 0.5;
				visible: 0;

				image {
					normal: "images/fileman_im4.png";
					border: 9 9 8 9;
				} 
			}

			description { 
				state: "selected" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				visible: 1;
			}
		}

		part { 
			name: "e.swallow.icon";
			type: SWALLOW;

			description { 
				state: "default" 0.0;
				align: 0.5 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				color: 0 0 0 0;

				rel1 {
					relative: 0.0 0.0;
					offset: 2 2;
				}

				rel2 {
					to_y: "e.text.label";
					relative: 1.0 0.0;
					offset: -3 -1;
				}
			}
		}

		part { 
			name: "e.text.label";
			type: TEXT;
			mouse_events: 0;
			scale: 1;

			description { 
				state: "default" 0.0;
				align: 0.5 1.0;
				fixed: 0 1;
				visible: 0;
				color: 255 255 255 255;

				rel1 {
					relative: 0.0 1.0;
					offset: 0 -1;
				}

				rel2 {
					relative: 1.0 1.0;
					offset: -1 -1;
				}

				text {
					font: "DejaVuSans";
					size: 11;
					min: 1 1;
					align: 0.5 0.5;
					#if ENABLE_TEXT_CLASS == 0
						text_class: "";
					#else
					#if ENABLE_TEXT_CLASS == 1
						text_class: "fileman_icon";
					#endif
					#endif
				}
			}

			description { 
				state: "selected" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}

		part { 
			name: "event";
			type: RECT;
			mouse_events: 1;
			ignore_flags: ON_HOLD;

			description { 
				state: "default" 0.0;
				color: 0 0 0 0;
			}
		}
	}

	programs {
		program { 
			name: "selected";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "selected" 0.0;
			target: "bg";
			target: "e.text.label";
		}

		program { 
			name: "unselected";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "bg";
			target: "e.text.label";
		}

		program { 
			name: "go";
			signal: "mouse,up,1";
			source: "event";
			action: SIGNAL_EMIT "e,action,click" "e";
		}
	}
}

