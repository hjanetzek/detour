
group {
	name: "e/widgets/scrollframe";

	parts {
		part {
			name: "bg";
			mouse_events: 0;

			description {
				state: "default" 0.0;

			rel1 { offset: -1 3; }
			rel2 { offset: -1 -3; }

				image {
					normal: "scrollframe_bg.png";
					border: 7 7 7 7;
				}

				fill {
					smooth: 0;
				}
			}
		}

#include "scrollframe_main.edc"

			part {
				name: "border";
				mouse_events: 0;

				description {
					state: "default" 0.0;

				rel1 { offset: 0 4; }
				rel2 { offset: -2 -4; }
	
					image {
						normal: "scrollframe_inset.png";
						border: 5 5 5 6;
					}
				}
			}

#include "scrollframe_vbar.edc"
#include "scrollframe_hbar.edc"

			part {
				name: "focus_clip";
				mouse_events: 0;
				type: RECT;

				description {
					state: "default" 0.0;
					color: 255 255 255 0;

				rel1.offset: -2 3;
				rel2.offset: 0 -3;
				}

				description {
					state: "focused" 0.0;
					inherit: "default" 0.0;
					color: 255 255 255 255;
				}
			}

			part {
				name: "focus";
				mouse_events: 0;
				clip_to: "focus_clip";

				description {
					state: "default" 0.0;

				rel1.offset: -2 3;
				rel2.offset: 0 -3;

					image.normal: "scrollframe_focus.png";
					image.border: 7 7 7 7;
					}
				}
			}
  
	programs {

#include "scrollframe_vbar_progs.edc"
#include "scrollframe_hbar_progs.edc"

# ifdef FOCUS
#  undef FOCUS
# endif
#define FOCUS(NAME,SIGNAL,STATE) \
program { \
	name: NAME; \
	signal: SIGNAL; \
	source: "e"; \
	action: STATE_SET STATE 0.0; \
	transition: DECELERATE 0.5; \
	target: "focus_clip"; \
}
	FOCUS("focus_in", "e,state,focused", "focused")
	FOCUS("focus_out", "e,state,unfocused", "default")
	}
}
