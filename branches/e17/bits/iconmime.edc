
/* FreeDesktop.Org Icons
 * http://standards.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html
 *
 * In the comment you can find the old e icon name.
 *
 * Icons marked with *** are not mentioned in the spec, but we still try to
 * follow the naming convention.
 *
 * TO ADD A NEW ICON:
 * 1. Search for a name in the spec OR
 * 2. Search for a name in kde (oxigen) and gnome (tango - human) icon set OR
 * 3. Try to follow the naming convention
 */

# ifdef ICON
#  undef ICON
# endif
#define ICON(NAME, FILE)					\
group {								\
	name: "e/icons/"NAME ;					\
	parts {							\
		part {						\
			name: "icon";				\
			type: IMAGE;				\
			repeat_events: 0; 			\
			description { 				\
				state: "default" 0.0;		\
				max: 24 24;			\
				image { 			\
					normal: FILE; 		\
				} 				\
			}                                     	\
		}                                           	\
	}                                                    	\
}

#define ICONMIME(NAME, FILE) ICON("mimetypes/"NAME, FILE)

//ICON("preferences-desktop-shelf","icons/icon_shelf.png")                        	// *** // "enlightenment/shelf"
ICON("preferences-desktop-shelf-bottom-desk","icons/icon_shelf_bottom_desk.png")	// *** // "enlightenment/shelf_bottom_desk" +
ICON("preferences-desktop-shelf-custom","icons/icon_shelf_custom.png")          	// *** // "enlightenment/shelf_custom" +
ICON("preferences-desktop-shelf-dock","icons/icon_shelf_dock.png")              	// *** // "enlightenment/shelf_dock" +
ICON("preferences-desktop-shelf-menu-bar","icons/icon_shelf_menu_bar.png")      	// *** // "enlightenment/shelf_menu_bar" +
ICON("preferences-desktop-shelf-panel","icons/icon_shelf_panel.png")            	// *** // "enlightenment/shelf_panel" +
ICON("preferences-desktop-shelf-top-desk","icons/icon_shelf_top_desk.png")      	// *** // "enlightenment/shelf_top_desk" +

ICON("preferences-position-bottom","icons/icon_shelf_bottom.png")               	// *** // "enlightenment/shelf_position_bottom" +
ICON("preferences-position-bottom-left","icons/icon_shelf_bottom_left.png")     	// *** // "enlightenment/shelf_position_bottom_left" +
ICON("preferences-position-bottom-right","icons/icon_shelf_bottom_right.png")   	// *** // "enlightenment/shelf_position_bottom_right" +
ICON("preferences-position-top","icons/icon_shelf_top.png")                     	// *** // "enlightenment/shelf_position_top" +
ICON("preferences-position-top-left","icons/icon_shelf_top_left.png")           	// *** // "enlightenment/shelf_position_top_left" +
ICON("preferences-position-top-right","icons/icon_shelf_top_right.png")         	// *** // "enlightenment/shelf_position_top_right" +
ICON("preferences-position-left","icons/icon_shelf_left.png")                   	// *** // "enlightenment/shelf_position_left" +
ICON("preferences-position-left-top","icons/icon_shelf_left_top.png")           	// *** // "enlightenment/shelf_position_left_top" +
ICON("preferences-position-left-bottom","icons/icon_shelf_left_bottom.png")     	// *** // "enlightenment +/shelf_position_left_bottom"
ICON("preferences-position-right","icons/icon_shelf_right.png")                 	// *** // "enlightenment/shelf_position_right" +
ICON("preferences-position-right-top","icons/icon_shelf_right_top.png")         	// *** // "enlightenment/shelf_position_right_top" +
ICON("preferences-position-right-bottom","icons/icon_shelf_right_bottom.png")   	// *** // "enlightenment/shelf_position_right_bottom" +

# ifdef ICON
#  undef ICON
# endif
#define ICON(NAME, FILE)					\
group {								\
	name: "e/icons/"NAME ;					\
	parts {							\
		part {						\
			name: "icon";				\
			type: IMAGE;				\
			repeat_events: 0; 			\
			description { 				\
				state: "default" 0.0;		\
				max: 16 16;			\
				image { 			\
					normal: FILE; 		\
				} 				\
			}                                     	\
		}                                           	\
	}                                                    	\
}

# ifdef ICONMIME
#  undef ICONMIME
# endif
#define ICONMIME(NAME, FILE) ICON("mimetypes/"NAME, FILE)
ICON("edit-copy","icons/icon_efm_copy.png")                        // EFMBUTTON("copy" +
ICON("edit-cut","icons/icon_efm_cut.png")                          // EFMBUTTON("cut" +
ICON("edit-paste","icons/icon_efm_paste.png")                      // EFMBUTTON("paste" +
ICON("edit-delete","icons/icon_efm_delete.png")                    // EFMBUTTON("delete" +
ICON("edit-rename","icons/icon_efm_rename.png")                    // EFMBUTTON("rename" +

/* End of FreeDesktop.Org icons */

# ifdef ICON
#  undef ICON
# endif
#define ICON(NAME, FILE, SIZE)                          \
group { name: "e/icons/"NAME ;                          \
   max: SIZE SIZE;                                      \
   parts {                                              \
      part { name: "icon";                              \
	 repeat_events:  1;                             \
	 description { state: "default" 0.0;            \
	    aspect: 1.0 1.0;                            \
	    aspect_preference: BOTH;                    \
	    image.image: FILE COMP;                     \
	    image.normal: FILE ;                        \
	 }                                              \
      }                                                 \
   }                                                    \
}

# ifdef ICONMIME
#  undef ICONMIME
# endif
#define ICONMIME(NAME, FILE, SIZE) ICON("mimetypes/"NAME, FILE, SIZE)


ICONMIME("inode/chardevice","icons/icon_efm_file.png",128)
ICONMIME("inode/blockdevice","icons/icon_efm_file.png",128)
ICONMIME("inode/directory-locked","icons/icon_efm_file.png",128)
ICONMIME("inode/directory","icons/icon_efm_folder.png",128)
ICONMIME("inode/fifo","icons/icon_efm_file.png",128)
ICONMIME("inode/socket","icons/icon_efm_file.png",128)

// EFM icons //

#define EFMICON(NAME, FILE, SIZE)                       \
group { name: "e/icons/fileman/"NAME;                   \
   max:  SIZE SIZE;                                     \
   parts {                                              \
      part { name: "icon";                              \
	 mouse_events:  0;                              \
	 description { state: "default" 0.0;            \
	    aspect: 1.0 1.0;                            \
	    aspect_preference: BOTH;                    \
	    image.image: FILE COMP;                     \
	    image.normal: FILE ;                        \
	 }                                              \
      }                                                 \
   }                                                    \
}

//EFMICON("folder","icon_efm_folder.png", 128)
EFMICON("chrdev","icons/icon_efm_file.png", 128)
EFMICON("blkdev","icons/icon_efm_file.png", 128)
EFMICON("fifo","icons/icon_efm_file.png", 128)
EFMICON("socket","icons/icon_efm_file.png", 128)
EFMICON("executable","icons/icon_efm_file.png", 128)
EFMICON("file","icons/icon_efm_file.png", 128)
//EFMICON("home","icon_efm_home.png", 128)
//EFMICON("root","icon_efm_root.png", 128)
//EFMICON("tmp","icon_efm_tmp.png", 128)
//EFMICON("desktop","icon_efm_desktop.png", 128)
//EFMICON("hdd","icon_efm_hdd.png", 128)
//EFMICON("hd","icon_efm_hdd.png", 128)


// EFM Mime type icons //

#define MIMEICON(NAME, FILE, SIZE)                      \
group { name: "e/icons/fileman/mime/"NAME;              \
   max:  SIZE SIZE;                                     \
   parts {                                              \
      part { name: "icon";                              \
	 mouse_events:  0;                              \
	 description { state: "default" 0.0;            \
	    aspect: 1.0 1.0;                            \
	    aspect_preference: BOTH;                    \
	    image.image: FILE COMP;                     \
	    image.normal: FILE ;                        \
	 }                                              \
      }                                                 \
   }                                                    \
}

MIMEICON("application/pdf","icons/icon_mime_pdf.png", 128); // +
//MIMEICON("application/x-deb","icon_mime_deb.png", 128);
//MIMEICON("application/x-bzip","icon_mime_package.png", 128);
//MIMEICON("application/zip","icon_mime_package.png", 128);
//MIMEICON("application/x-gzip","icon_mime_package.png", 128);
//MIMEICON("application/x-bzip-compressed-tar","icon_mime_package.png", 128);
//MIMEICON("application/x-bzip2-compressed-tar","icon_mime_package.png",128);
//MIMEICON("application/x-compressed-tar","icon_mime_package.png",128);
//MIMEICON("application/x-tar","icon_mime_package.png", 128);
//MIMEICON("application/x-rar","icon_mime_package.png", 128);

// Dynamic MIME Icons //

#define MIMEBASE(MIME, FILE, NAME, SIZE)                	\
group { name: "e/icons/fileman/mime/"MIME;              	\
   max:  SIZE SIZE;                                     	\
   parts {							\
      part { name: "base";					\
	 mouse_events: 0;					\
	 description { state: "default" 0.0;			\
	    aspect: 1.0 1.0;					\
	    aspect_preference: BOTH;				\
	    image.image: FILE COMP;				\
	    image.normal: FILE;					\
	 }							\
      }								\
      part { name: "name";					\
	 type: TEXT;						\
	 mouse_events: 0;					\
	 description { state: "default" 0.0;			\
	    rel1.relative: 0.2444 0.6797;			\
	    rel2.relative: 0.7478 0.8894;			\
	    color: 245 245 245 255;				\
	    text {						\
	       text:	NAME;					\
	       font:	"Sans:style=Bold";	\
	       size:	4;					\
	       fit:	1 1;					\
	       min:	1 1;					\
	       align:	0.5 0.0;				\
	    }							\
	 }							\
      }								\
   }								\
}

MIMEBASE("video/mpeg","icons/icon_mime_video_generic.png", ".MPEG", 128); // +
MIMEBASE("application/ogg","icons/icon_mime_video_generic.png", ".OGG", 128);
MIMEBASE("video/x-theora+ogg","icons/icon_mime_video_generic.png", ".OGG", 128);
MIMEBASE("video/x-msvideo","icons/icon_mime_video_generic.png", ".AVI", 128);

MIMEBASE("image/png","icons/icon_mime_image_generic.png", ".PNG", 128);
MIMEBASE("image/jpeg","icons/icon_mime_image_generic.png", ".JPEG", 128);
MIMEBASE("image/gif","icons/icon_mime_image_generic.png", ".GIF", 128);
MIMEBASE("image/bmp","icons/icon_mime_image_generic.png", ".BMP", 128);
MIMEBASE("application/x-xcf","icons/icon_mime_image_generic.png", ".XCF", 128);

MIMEBASE("audio/mpeg","icons/icon_mime_audio_generic.png", ".MP3", 128);
MIMEBASE("audio/x-wav","icons/icon_mime_audio_generic.png", ".WAV", 128);
MIMEBASE("audio/x-flac","icons/icon_mime_audio_generic.png", ".FLAC", 128);
MIMEBASE("audio/x-musepack","icons/icon_mime_audio_generic.png", ".MPC", 128);

MIMEBASE("text/css","icons/icon_mime_text_generic.png", ".CSS", 128);
MIMEBASE("text/html","icons/icon_mime_text_html.png", ".HTML", 128);
MIMEBASE("text/x-csrc","icons/icon_mime_text_generic.png", ".C", 128);
MIMEBASE("text/x-chdr","icons/icon_mime_text_generic.png", ".H", 128);
MIMEBASE("text/x-c++src","icons/icon_mime_text_generic.png", ".C++", 128);
MIMEBASE("text/x-csharp","icons/icon_mime_text_generic.png", ".C#", 128);
MIMEBASE("text/x-patch","icons/icon_mime_text_generic.png", ".PATCH", 128);
MIMEBASE("text/plain","icons/icon_mime_text_generic.png", ".TXT", 128);
MIMEBASE("application/x-msword","icons/icon_mime_text_generic.png", ".DOC", 128);
MIMEBASE("application/x-abiword","icons/icon_mime_text_generic.png", ".ABW", 128);

//MIMEBASE("application/x-object","icon_efm_file.png", "", 128);
//MIMEBASE("application/x-shellscript","icon_applications.png", "", 128);

MIMEBASE("application/x-font-ttf","icons/icon_mime_font_generic.png", ".TTF", 128);
MIMEBASE("application/x-font-pcf","icons/icon_mime_font_generic.png", ".PCF", 128);
MIMEBASE("application/x-font-bdf","icons/icon_mime_font_generic.png", ".BDF", 128);

