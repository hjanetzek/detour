
# ifdef SELECT
#  undef SELECT
# endif
#define SELECT(NAME,SIGNAL,STATE_NAME,INDEX,TRANSITION,TRANS_INDEX,TARGET) \
program { \
	name: NAME; \
	signal: SIGNAL; \
	source: "e"; \
	action: STATE_SET STATE_NAME INDEX; \
	transition: TRANSITION TRANS_INDEX; \
	target: TARGET; \
}

#define ITEM() \
	SELECT("active", "e,state,selected", "visible", 0.0, DECELERATE, 0.0, "item_hilight") \
	SELECT("inactive", "e,state,unselected", "default", 0.0, DECELERATE, 0.0, "item_hilight")

# ifdef TOGGLE
#  undef TOGGLE
# endif
#define TOGGLE(NAME) \
program { \
	name: "toggle_on"; \
	signal: "e,state,on"; \
	source: "e"; \
	action: STATE_SET "visible" 0.0; \
	target: NAME; \
} \
program { \
	name: "toggle_off"; \
	signal: "e,state,off"; \
	source: "e"; \
	action: STATE_SET "default" 0.0; \
	target: NAME; \
}

group {
	name: "e/widgets/menu/default/background";

	parts {
		part {
			name: "bg_border";
			type: RECT;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				color: 104 108 111 255;
			}
		}

		part {
			name: "gradient";
			type: GRADIENT;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				gradient.spectrum: "menu";
				rel1.offset: 1 1;
				rel2.offset: -2 -2;
			}
		}

		part {
			name: "bg_overlay";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				rel1.offset: 1 1;
				rel2.offset: -2 -2;

				image {
					normal: "images/menu_im0.png";
					border: 2 2 2 2;
					middle: 1;
				}

				fill {
					#if USE_SMOOTH_IMAGES == 0
						smooth: 0;
					#else
					#if USE_SMOOTH_IMAGES == 1
						smooth: 1;
					#endif
					#endif
				}
			}
		}

		part {
			name: "e.text.title";
			type: TEXT;
			/* effect: SOFT_SHADOW; */
			mouse_events: 0;
			scale: 1;

			description {
				state: "default" 0.0;
				fixed: 0 1;
				#if ENABLE_COLOR_CLASSES == 0
				#else
				#if ENABLE_COLOR_CLASSES == 1
					color_class: "menu_title";
				#endif
				#endif
				color: 30 30 30 255;
				color3: 255 255 255 128;
				visible: 0;

				rel1 { 
					relative: 0.0 0.0; 
					offset: 0 0; 
				}

				rel2 { 
					relative: 1.0 0.0; 
					offset: -1 -1; 
				}

				text {
					text: "Menu Title";
					#if USE_FONTCONFIG == 0
						font: "DejaVuSans-Bold";
					#else
					#if USE_FONTCONFIG == 1
						font: "Sans:style=Bold";
					#endif
					#endif
					size: 12;
					min: 0 0;
					align: 0.5 0.0;
					elipsis: 0.0;
					#if ENABLE_TEXT_CLASSES == 0
						text_class: "";
					#else
					#if ENABLE_TEXT_CLASSES == 1
						text_class: "menu_title";
					#endif
					#endif
				}
			}

			description {
				state: "visible" 0.0;
				inherit: "default" 0.0;
				align: 0.5 0.0;
				#if ENABLE_COLOR_CLASSES == 0
				#else
				#if ENABLE_COLOR_CLASSES == 1
					color_class: "menu_title_active";
				#endif
				#endif
				visible: 1;

				rel1 { 
					relative: 0.0 0.0; 
					offset: 0 8; 
				}

				rel2 { 
					relative: 1.0 0.0; 
					offset: -1 0; 
				}

				text {
					min: 1 1;
				}
			}
		}

		part {
			name: "e.swallow.content";
			type: SWALLOW;

			description {
				state: "default" 0.0;

				rel1 {
					to: "gradient"; 
					relative: 0.0 0.0; 
					offset: 3 2; 
				}

				rel2 { 
					relative: 1.0 1.0; 
					offset: -5 -5; 
				}
			} 
		}
	}
}

group {
	name: "e/widgets/menu/default/submenu";

	parts {
		part {
			name: "menu_arrow";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				min: 10 11;
				max: 10 11;
				//fixed: 1 1;
				image.normal: "images/menu_im3.png";

				rel2 { 
					relative: 0.0 0.0; 
					offset: 2 0; 
				} 

				rel2 { 
					relative: 1.0 1.0; 
					offset: -3 -1; 
				}
			}

			description {
        			state: "visible" 0.0;
				inherit: "default" 0.0;
	       		 	image.normal: "images/menu_im4.png";
			}
		}

	}

	programs {
		program {
			name: "selected";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "visible" 0.0;
			target: "menu_arrow";
		}

		program {
			name: "unselected";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "menu_arrow";
		}
	}
}

group {
	name: "e/widgets/menu/default/separator";

	parts {
		part {
			name: "separator";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				min: 20 2;
				max: 9999 2;

				rel1 { 
					relative: 0.0 0.0; 
					offset: -3 3; 
				}

				rel2 { 
					relative: 1.0 1.0; 
					offset: 2 -3; 
				}

				image {
					normal: "images/menu_im1.png";
					border: 2 2 1 1;
				}

				fill {
					#if USE_SMOOTH_IMAGES == 0
						smooth: 0;
					#else
					#if USE_SMOOTH_IMAGES == 1
						smooth: 1;
					#endif
					#endif
				}
			}
		}
	}
}

group {
	name: "e/widgets/menu/default/check";

	parts {
		part {
			name: "base";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				min: 20 18;
				max: 20 18;
				//fixed: 1 1;

				#if VISIBLE_MENU_TITLE == 0
					rel1 { 
						relative: 0.0 0.0; 
						offset: -1 1; 
					}
				#else
				#if VISIBLE_MENU_TITLE == 1
					rel1 { 
						relative: 0.0 0.0; 
						offset: 1 1; 
					}
				#endif
				#endif

				rel2 { 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}

				image {
					normal: "images/check_bt0.png";
				}
			}
		}

		part {
			name: "shadow";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				color: 255 255 255 192;
				image.normal: "images/check_bt4.png";

				rel1 { 
					to: "check";
					relative: 0.0 0.0; 
					offset: 1 -1; 
				}

				rel2 { 
					to: "check";
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}

				fill {
					#if USE_SMOOTH_IMAGES == 0
						smooth: 0;
					#else
					#if USE_SMOOTH_IMAGES == 1
						smooth: 1;
					#endif
					#endif
				}
			} 
		}

		part {
			name: "check";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				min: 20 18;
				max: 20 18;
				//fixed: 1 1;

				rel1 { 
					relative: 0.0 0.0; 
					offset: -1 1; 
				}

				rel2 { 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}

				image {
					normal: "images/check_bt1.png";
				}
			}

			description {
				state: "visible" 0.0;
				inherit: "default" 0.0;

				image {
					normal: "images/check_bt2.png";
				}
			}
		}
	}

	programs {
		TOGGLE("check")
	}
}

group {
	name: "e/widgets/menu/default/radio";

	parts {
		part {
			name: "base";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				min: 20 18;
				max: 20 18;
				//fixed: 1 1;

				rel1 { 
					relative: 0.0 0.0; 
					offset: -1 1; 
				}

				rel2 { 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}

				image {
					normal: "images/radio_bt0.png";
				}
			}

			description {
				state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 128;
			}
		}

		part {
			name: "shadow";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				color: 255 255 255 192;
				image.normal: "images/radio_bt4.png";

				rel1 { 
					to: "radio";
					relative: 0.0 0.0; 
					offset: 0 1; 
				}

				rel2 { 
					to: "radio";
					relative: 1.0 1.0; 
					offset: -1 -1; 
				}

				fill {
					#if USE_SMOOTH_IMAGES == 0
						smooth: 0;
					#else
					#if USE_SMOOTH_IMAGES == 1
						smooth: 1;
					#endif
					#endif
				}
			} 
		}

		part {
			name: "radio";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				min: 20 18;
				max: 20 18;
				//fixed: 1 1;

				rel1 { 
					relative: 0.0 0.0; 
					offset: -1 1; 
				}

				rel2 { 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}

				image {
					normal: "images/radio_bt1.png";
				}
			}

			description {
				state: "visible" 0.0;
				inherit: "default" 0.0;

				image {
					normal: "images/radio_bt2.png";
				}
			}
		}
	}

	programs {
		TOGGLE("radio")
	}
}

group {
	name: "e/widgets/menu/default/item_bg";

	parts {
		part {
			name: "item_hilight";
			type: IMAGE;

			description {
				state: "default" 0.0;
				max: 9999 24;
				image.normal: "images/menu_im2.png";
				image.border: 5 5 5 5;
				visible: 0;

				rel1 { 
					relative: 0.0 0.0; 
					offset: 0 -2; 
				}

				rel2 { 
					relative: 1.0 1.0; 
					offset: -1 2; 
				}

				fill {
					#if USE_SMOOTH_IMAGES == 0
						smooth: 0;
					#else
					#if USE_SMOOTH_IMAGES == 1
						smooth: 1;
					#endif
					#endif
				}
			} 

			description {
				state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}

		part {
			name: "e.swallow.content";
			type: SWALLOW;

			description {
				state: "default" 0.0;
				align: 0.0 0.0;

				rel1 { 
					relative: 0.0 0.0; 
					offset: 2 2; 
				}

				rel2 { 
					relative: 1.0 1.0; 
					offset: -1 -2;
				}
			} 
		}
	}

	programs {
		ITEM()
	}
}

group {
	name: "e/widgets/menu/default/submenu_bg";

	parts {
		part {
			name: "item_hilight";
			type: IMAGE;

			description {
				state: "default" 0.0;
				max: 9999 24;
				image.normal: "images/menu_im2.png";
				image.border: 5 5 5 5;
				visible: 0;

				rel1 { 
					relative: 0.0 0.0; 
					offset: 0 -2; 
				}

				rel2 { 
					relative: 1.0 1.0; 
					offset: -1 2; 
				}

				fill {
					#if USE_SMOOTH_IMAGES == 0
						smooth: 0;
					#else
					#if USE_SMOOTH_IMAGES == 1
						smooth: 1;
					#endif
					#endif
				}
			} 

			description {
				state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}

		part {
			name: "e.swallow.content";
			type: SWALLOW;

			description {
				state: "default" 0.0;
				align: 0.0 0.0;

				rel1 { 
					relative: 0.0 0.0; 
					offset: 2 2; 
				}

				rel2 { 
					relative: 1.0 1.0; 
					offset: -1 -2;
				}
			} 
		}

	}

	programs {
		ITEM()
	}
}

group {
	name: "e/widgets/menu/default/label";

	parts {
		part {
			name: "e.text.label";
			type: TEXT;
			effect: SHADOW;
			mouse_events: 0;
			scale: 1;
      
			description {
        			state: "default" 0.0;
				#if ENABLE_COLOR_CLASSES == 0
					color_class: "";
				#else
				#if ENABLE_COLOR_CLASSES == 1
					color_class: "menu_item";
				#endif
				#endif
				color: 60 60 60 255;
			        color3: 255 255 255 128;
			  
				rel1 { 
					relative: 0.0 0.0; 
					offset: 3 3; 
				}

				rel2 { 
					relative: 1.0 1.0; 
					offset: -4 -2; 
				}

				text {
					text: "Item Label";
					#if USE_FONTCONFIG == 0
						font: "DejaVuSans-Bold";
					#else
					#if USE_FONTCONFIG == 1
						font: "Sans:style=Bold";
					#endif
					#endif
					size: 11;
					min: 1 1;
					align: 0.0 0.0;
					#if ENABLE_TEXT_CLASSES == 0
						text_class: "";
					#else
					#if ENABLE_TEXT_CLASSES == 1
						text_class: "menu_item";
					#endif
					#endif
				}
			}

			description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
			        color3: 255 255 255 0;
			}
		}
	}

	programs {
		SELECT("go_passive", "e,state,unselected", "default", 0.0, LINEAR, 0.0, "e.text.label")
		SELECT("go_active", "e,state,selected", "active", 0.0, LINEAR, 0.0, "e.text.label")
	}
}

group { 
	name: "e/widgets/menu/default/icon";

	parts {
		part { 
			name: "e.swallow.content";
			type: SWALLOW;

			description {
				state: "default" 0.0;
				aspect: 1.0 1.0;

/*
				rel1 {
					relative: 0.0 0.0;
					offset: 2 2;
				}

				rel2 {
					relative: 1.0 1.0;
					offset: -3 -3;
				}
*/

				rel1 {
					relative: 0.0 0.0;
					offset: 1 1;
				}

				rel2 {
					relative: 1.0 1.0;
					offset: -2 -2;
				}
			}
		}
	}
}

