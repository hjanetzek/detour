
# ifdef SELECT
#  undef SELECT
# endif
#define SELECT(NAME,SIGNAL,STATE_NAME,INDEX,TRANSITION,TRANS_INDEX,TARGET) \
program { \
	name: NAME; \
	signal: SIGNAL; \
	source: "e"; \
	action: STATE_SET STATE_NAME INDEX; \
	transition: TRANSITION TRANS_INDEX; \
	target: TARGET; \
}

#define ITEM() \
	SELECT("go_passive", "e,state,unselected", "default", 0.0, DECELERATE, 0.0, "item_hilight") \
	SELECT("go_active", "e,state,selected", "active", 0.0, DECELERATE, 0.0, "item_hilight")


# ifdef TOGGLE
#  undef TOGGLE
# endif
#define TOGGLE(NAME) \
program { \
	name: "signal_toggle_on"; \
	signal: "e,state,on"; \
	source: "e"; \
	action: STATE_SET "active" 0.0; \
	target: NAME; \
} \
program { \
	name: "signal_toggle_off"; \
	signal: "e,state,off"; \
	source: "e"; \
	action: STATE_SET "default" 0.0; \
	target: NAME; \
}

group {
	name: "e/widgets/menu/default/background";

	parts {
		#include "menu_background.edc"
	}

	programs {
		#if VISIBLE_MENU_TITLE == 0
		#else
		#if VISIBLE_MENU_TITLE == 1
			program {
				name: "on";
				signal: "e,action,show,title";
				source: "e";
				action: STATE_SET "active" 0.0;
				target: "e.text.title";
			}
			program {
				name: "off";
				signal: "e,action,hide,title";
				source: "e";
				action: STATE_SET "default" 0.0;
				target: "e.text.title";
			}
		#endif
		#endif
	}
}

group {
	name: "e/widgets/menu/default/submenu";

	parts {
		#include "menu_submenu.edc"
	}

	programs {
		program {
			name: "go_active";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "active" 0.0;
			target: "menu_arrow";
		}

		program {
			name: "go_passive";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "menu_arrow";
		}
	}
}

group {
	name: "e/widgets/menu/default/separator";

	parts {
		#include "menu_separator.edc"
	}
}

group {
	name: "e/widgets/menu/default/check";

	parts {
		part {
			name: "base";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				min: 20 18;
				max: 20 18;

				#if VISIBLE_MENU_TITLE == 0
					rel1 { 
						relative: 0.0 0.0; 
						offset: -1 1; 
					}
				#else
				#if VISIBLE_MENU_TITLE == 1
					rel1 { 
						relative: 0.0 0.0; 
						offset: 1 1; 
					}
				#endif
				#endif

				rel2 { 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}

				image {
					normal: "check_bt0.png";
				}
			}
		}

		part {
			name: "shadow";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				color: 255 255 255 128;
				image.normal: "check_bt4.png";

				#if VISIBLE_MENU_TITLE == 0
					rel1 { 
						to: "check";
						relative: 0.0 0.0; 
						offset: 0 -1; 
					}
				#else
				#if VISIBLE_MENU_TITLE == 1
					rel1 { 
						to: "check";
						relative: 0.0 0.0; 
						offset: 2 -1; 
					}
				#endif
				#endif

				rel2 { 
					to: "check";
					relative: 1.0 1.0; 
					offset: -1 -1; 
				}
			} 
		}

		part {
			name: "check";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				min: 20 18;
				max: 20 18;

				#if VISIBLE_MENU_TITLE == 0
					rel1 { 
						relative: 0.0 0.0; 
						offset: -1 1; 
					}
				#else
				#if VISIBLE_MENU_TITLE == 1
					rel1 { 
						relative: 0.0 0.0; 
						offset: 1 1; 
					}
				#endif
				#endif

				rel2 { 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}

				image {
					normal: "check_bt1.png";
				}
			}

			description {
				state: "active" 0.0;
				inherit: "default" 0.0;

				image {
					normal: "check_bt2.png";
				}
			}
		}
	}

	programs {
		TOGGLE("check")
	}
}

group {
	name: "e/widgets/menu/default/radio";

	parts {
		part {
			name: "base";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				min: 20 18;
				max: 20 18;

				#if VISIBLE_MENU_TITLE == 0
					rel1 { 
						relative: 0.0 0.0; 
						offset: -1 1; 
					}
				#else
				#if VISIBLE_MENU_TITLE == 1
					rel1 { 
						relative: 0.0 0.0; 
						offset: 1 1; 
					}
				#endif
				#endif

				rel2 { 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}

				image {
					normal: "radio_bt0.png";
				}
			}

			description {
				state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 128;
			}
		}

		part {
			name: "shadow";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				image.normal: "radio_bt4.png";

				#if VISIBLE_MENU_TITLE == 0
					rel1 { 
						to: "radio";
						relative: 0.0 0.0; 
						offset: 0 1; 
					}
				#else
				#if VISIBLE_MENU_TITLE == 1
					rel1 { 
						to: "radio";
						relative: 0.0 0.0; 
						offset: 1 1; 
					}
				#endif
				#endif

				rel2 { 
					to: "radio";
					relative: 1.0 1.0; 
					offset: -1 -1; 
				}
			} 
		}

		part {
			name: "radio";
			type: IMAGE;
			mouse_events: 0;

			description {
				state: "default" 0.0;
				min: 20 18;
				max: 20 18;

				#if VISIBLE_MENU_TITLE == 0
					rel1 { 
						relative: 0.0 0.0; 
						offset: -1 1; 
					}
				#else
				#if VISIBLE_MENU_TITLE == 1
					rel1 { 
						relative: 0.0 0.0; 
						offset: 1 1; 
					}
				#endif
				#endif

				rel2 { 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}

				image {
					normal: "radio_bt1.png";
				}
			}

			description {
				state: "active" 0.0;
				inherit: "default" 0.0;

				image {
					normal: "radio_bt2.png";
				}
			}
		}
	}

	programs {
		TOGGLE("radio")
	}
}

group {
	name: "e/widgets/menu/default/icon";

	parts {
		#include "menu_icon.edc"
	}
}

group {
	name: "e/widgets/menu/default/item_bg";

	parts {
		#include "menu_item_bg.edc"
	}

	programs {
		ITEM()
	}
}

group {
	name: "e/widgets/menu/default/submenu_bg";

	parts {
		#include "menu_submenu_bg.edc"
	}

	programs {
		ITEM()
	}
}

group {
	name: "e/widgets/menu/default/label";

	parts {
		part {
			name: "e.text.label";
			type: TEXT;
			mouse_events: 0;
			scale: 1;
      
			description {
        			state: "default" 0.0;
				#if ENABLE_COLOR_CLASS == 0
					color_class: "";
				#else
				#if ENABLE_COLOR_CLASS == 1
					color_class: "menu_item";
				#endif
				#endif
				color: 60 60 60 255;
        
				rel1 { 
					relative: 0.0 0.0; 
					offset: 5 3; 
				}

				rel2 { 
					relative: 1.0 1.0; 
					offset: -6 -2; 
				}

				text {
					text: "Item Label";
					font: "Sans:style=Bold,DejaVuSans-Bold";
					size: 11;
					min: 1 1;
					align: 0.0 0.5;
					#if ENABLE_TEXT_CLASS == 0
						text_class: "";
					#else
					#if ENABLE_TEXT_CLASS == 1
						text_class: "menu_item";
					#endif
					#endif
				}
			}

			description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
			}
		}
	}

	programs {
		SELECT("go_passive", "e,state,unselected", "default", 0.0, LINEAR, 0.0, "e.text.label")
		SELECT("go_active", "e,state,selected", "active", 0.0, LINEAR, 0.0, "e.text.label")
	}
}

